#!/bin/bash

#====================================================================
# Script for LDAP Synchronization Connector
#
# Launch synchronize task with correct classpath
#
# Copyright (C) 2008 Clement OUDOT
# Copyright (C) 2008 Jonathan CLARKE
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# GPL License: http://www.gnu.org/licenses/gpl.txt
#====================================================================
# Possible exit codes:
#	- 0: success, LSC finished running
#	- 1: LSC seems to be already running, aborting
#	- 2: 'java' executable not found on PATH or in JAVA_HOME, aborting
#====================================================================


#====================================================================
# Changelog
#====================================================================
# Version 0.4 (01/2010):
# - Include a fatal error message in JAVA_HOME missing
# - Notice log file location
# Version 0.3 (01/2010):
# - Update for LSC 1.2
# - Guess the base directory for LSC and usual directories
# - Use JAVA_HOME from the environment or java on PATH, without redefining it
# Version 0.2 (2008):
# - Modify exit codes
# - Add comments
# Author: Clement OUDOT (LINAGORA)
#
# Version 0.1 (2008):
# - First version
# Author: Jonathan CLARKE (LINAGORA)
#====================================================================

# work out where LSC lives
LSC_HOME=$(dirname "${BASH_SOURCE}")/..
if [ ${LSC_HOME:0:1} != "/" ] ; then
	LSC_HOME="${PWD}/${LSC_HOME}"
fi

#====================================================================
# Configuration
#====================================================================

CFG_DIR="$LSC_HOME/etc"
LIB_DIR="$LSC_HOME/lib"
LOG_DIR="/tmp"
LOG_FILE="$LOG_DIR/lsc.log"

mkdir -p "$LOG_DIR"

#====================================================================
# Functions
#====================================================================
function log() {
	echo "$(date "+${DATE_FORMAT:-%Y/%m/%d %T}") [lsc] $1" >> "$LOG_FILE"
}

function fatal() {
	log $1
	echo "$(date "+${DATE_FORMAT:-%Y/%m/%d %T}") [lsc] $1" 1>&2
}

# Determine where the java exectuable is
function get_java() {
	# Do we have a JAVA_HOME environment variable?
	if [ "z" != "z${JAVA_HOME}" ]; then
		JAVA_COMMAND="${JAVA_HOME}/bin/java"
		return
	fi

	# Try java command on PATH as an alternative
	JAVA_COMMAND="$(which java)"
	if [ $? -eq 0 ]; then return; fi

	# Nothing seems approprite, warn and exit
	fatal "No java executable found on PATH or in JAVA_HOME! Aborting."
	fatal "Define JAVA_HOME or adjust your PATH variable to include java."
	exit 2
}

#====================================================================
# Main
#====================================================================

# check if we have java executable
get_java

# check if LSC is not already running
if [ $(ps -efww | grep java | grep org.lsc.Launcher | grep -v grep | wc -l) -ne 0 ] 
then
	# LSC already running
	fatal "LSC already running - launch aborted"

	# since LSC already running, don't launch and exit
	exit 1
fi

# LSC not already running
log "Starting LSC"

CLASSPATH="$CLASSPATH:."
for jar in "$LIB_DIR"/*.jar
do
	CLASSPATH="$CLASSPATH:$jar"
done

${JAVA_COMMAND} -cp "$CLASSPATH" org.lsc.Launcher $* 

status=$?

# LSC finished running
log "LSC finished running"

if [ $status -ne 0 ]
then
	echo "Last log file line: `tail -2 "$LOG_FILE" | head -1`" 1>&2
	exit $status
fi

#====================================================================
# Exit
#====================================================================
exit 0
