#########################################################################
# LDAP Synchronization Connector (LSC) - http://lsc-project.org         #
# Main configuration file                                               #
#########################################################################
# Most configuration parameters for LSC are in this file.
# All configuration files are located in this directory (etc)
#
# Configuration layout:
# - etc/ (this directory)
#	- lsc.properties (this file)
#		main configuration file
#	- logback.xml
#		configure logging to console, files and CSV/LDIF output
#	- sql-map-config.xml
#	- sql-map-config.d/
#		- <name>.xml
# 
# For ldap2ldap connectors, you only need to configure this file and
# logback.xml.
#########################################################################

##############################
# Destination LDAP directory #
##############################
# This section is mandatory since all synchronizations currently go to an LDAP directory.

# Connection URL. This must include a valid LDAP context.
dst.java.naming.provider.url = ldap://localhost:33389/dc=lsc-project,dc=org

# Authentication type.
# "none" causes an anonymous bind. "simple" performs a standard bind.
dst.java.naming.security.authentication = simple

# Bind DN to use if authentication type is "simple"
dst.java.naming.security.principal = cn=Directory Manager,dc=lsc-project,dc=org

# Bind password to use if authentication type is "simple"
dst.java.naming.security.credentials = secret

# Follow referrals in searches?
# Allowed values are "ignore", "follow".
dst.java.naming.referral = ignore

# Dereference aliases in searches?
# Allowed values are "never", "search", "find", "always"
dst.java.naming.ldap.derefAliases = never

# Standard properties. These should not be changed.
dst.java.naming.factory.initial = com.sun.jndi.ldap.LdapCtxFactory
dst.java.naming.ldap.version = 3

#########################
# Source LDAP directory #
#########################
# This section can safely be deleted if you are not using ldap2ldap synchronization.

# Connection URL. This must include a valid LDAP context.
src.java.naming.provider.url = ldap://localhost:33389/dc=lsc-project,dc=org

# Authentication type.
# "none" causes an anonymous bind. "simple" performs a standard bind.
src.java.naming.security.authentication = simple

# Bind DN to use if authentication type is "simple"
src.java.naming.security.principal = cn=Directory Manager,dc=lsc-project,dc=org

# Bind password to use if authentication type is "simple"
src.java.naming.security.credentials = secret

# Follow referrals in searches?
# Allowed values are "ignore", "follow".
src.java.naming.referral = ignore

# Dereference aliases in searches?
# Allowed values are "never", "search", "find", "always"
src.java.naming.ldap.derefAliases = never

# Standard properties. These should not be changed.
src.java.naming.factory.initial = com.sun.jndi.ldap.LdapCtxFactory
src.java.naming.ldap.version = 3

###################
# Source database #
###################
# This section can safely be deleted if you are not using db2ldap synchronization.

# Java class name of the JDBC driver to use for this database
src.database.driver = org.hsqldb.jdbcDriver

# Connection URL. This must include the database name.
src.database.url = jdbc:hsqldb:file:hsqldb/lsc

# User name to connect to the database with
src.database.username = sa

# Password to connect to the database with
src.database.password =

#######################
# Tasks configuration #
#######################
# This section defines the synchronization tasks for LSC.

# List of defined tasks, seperated by commas
lsc.tasks = FirstTask, SecondTask

# Java class name for the service to read objects from the source
# Either "org.lsc.jndi.SimpleJndiSrcService" for ldap2ldap, or
# "org.lsc.service.SimpleJdbcSrcService" for db2ldap
# According to which service you use here, you only need *one* of the following sections
lsc.tasks.FirstTask.srcService = org.lsc.jndi.SimpleJndiSrcService


### SimpleJndiSrcService parameters
# The parameters in this section only apply to the SimpleJndiSrcService
# This section can safely be deleted if you are not using ldap2ldap synchronization.

# Base DN for searches in the directory
lsc.tasks.FirstTask.srcService.baseDn = ou=People

# Filter to list all entries to synchronize
lsc.tasks.FirstTask.srcService.filterAll = (&(sn=*)(objectClass=inetOrgPerson))

# Attributes to read from all entries used to match objects between source and destination
lsc.tasks.FirstTask.srcService.pivotAttrs = cn sn

# Filter to read one entry to synchronize, based on pivotAttrs above
# This filter may contain one or several pivotAttrs defined above, like "{attributeName}"
lsc.tasks.FirstTask.srcService.filterId = (sn={sn})

# Attributes to read from each entry used to read and write data
lsc.tasks.FirstTask.srcService.attrs = description cn sn userPassword
### END of SimpleJndiSrcService parameters


### SimpleJdbcSrcService parameters
# The parameters in this section only apply to the SimpleJdbcSrcService
# This section can safely be deleted if you are not using db2ldap synchronization.

# Request name from a file in CONFIGURATION_DIR/sql-map-config.d/
# to read a full list of pivot attributes for all objects to be synchronized
lsc.tasks.FirstTask.srcService.requestNameForList = getAllPeoplePivots

# Request name from a file in CONFIGURATION_DIR/sql-map-config.d/
# to read a single entry to be synchronized given a set of pivot attributes
lsc.tasks.FirstTask.srcService.requestNameForObject = getOnePerson

### END of SimpleJdbcSrcService parameters


# Java class name for the service to read and write objects in the destination
# Usually "org.lsc.jndi.SimpleJndiDstService".
lsc.tasks.FirstTask.dstService = org.lsc.jndi.SimpleJndiDstService


### SimpleJndiDstService parameters
# The parameters in this section only apply to the SimpleJndiDstService

# Base DN for searches in the directory
lsc.tasks.FirstTask.dstService.baseDn = ou=People

# Filter to list all entries to synchronize
lsc.tasks.FirstTask.dstService.filterAll = (&(sn=*)(objectClass=inetOrgPerson))

# Attributes to read from all entries used to match objects between source and destination
lsc.tasks.FirstTask.dstService.pivotAttrs = cn sn

# Filter to read one entry to synchronize, based on pivotAttrs above
# This filter may contain one or several pivotAttrs defined above, like "{attributeName}"
lsc.tasks.FirstTask.dstService.filterId = (sn={sn})

# Attributes to read from each entry used to read and write data
lsc.tasks.FirstTask.dstService.attrs = description cn sn userPassword objectClass
### END of SimpleJndiDstService parameters


# Java class name for the LDAP objectClass to compare source and destination objects
# This should be the LDAP objectClass of entries in the destination directory
lsc.tasks.FirstTask.bean = org.lsc.beans.SimpleBean

# Construct a DN for new entries in the destination directory
# This is a JavaScript expression, and can access any utility functions and the srcBean.
# It should be relative to the LDAP context specified in dst.java.naming.provider.url
lsc.tasks.FirstTask.dn = "cn=" + srcBean.getAttributeValueById("cn") + ",ou=People"

dn.real_root = dc=lsc-project,dc=org

#############################
# Syncoptions configuration #
#############################
# This section defines synchronization rules for each task, attribute by attribute

# Define the implementation to use. PropertiesBasedSyncOptions is usually what you want.
# The only current alternative is ForceSyncOptions, which don't take any configuration.
lsc.syncoptions.FirstTask = org.lsc.beans.syncoptions.PropertiesBasedSyncOptions

# Set default behavior for all attributes not explicitly specified below
# Available actions are:
#	- K for Keep: don't change existing values in the destination
#		(create and default values from syncoptions may be applied, though)
#	- F for Force: replace values in the destination with our values
#		(from source, or force values in syncoptions)
#	- M for Merge: add values to multi-valued attributes
#		(from source, or create/default/force values in syncoptions)
# See documentation at http://lsc-project.org/wiki/documentation/1.2/configuration/syncoptions
lsc.syncoptions.FirstTask.default.action = K

# Set default delimiter for multiple values for an attribute.
# This is normally a semi-colon (;) but can be problematic when writing complex JavaScript
lsc.syncoptions.FirstTask.default.delimiter = $

# Sample syncoption for the SN attribute: force update, and put value from source in capitals
lsc.syncoptions.FirstTask.sn.action = F
lsc.syncoptions.FirstTask.sn.force_value = srcBean.getAttributeValueById("sn").toUpperCase()

# Sample syncoption for the userPassword attribute: provide a default password,
# if there isn't one in the destination, and hash it in SHA
lsc.syncoptions.FirstTask.userPassword.default_value = SecurityUtils.hash(SecurityUtils.HASH_SHA1, "defaultPassword")

# Many other possibilities are available in SyncOptions.
# You can write any JavaScript code in a default_value, force_value or create_value.
# See http://lsc-project.org/wiki/documentation/1.2/configuration/start for more.
