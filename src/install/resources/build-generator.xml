<project name="generator" basedir="." default="generate">

	<path id="ant.path">
		<fileset dir="${basedir}" includes="*.jar" />
	</path>

	<property name="workdir" value="${user.dir}" />

	<property name="test.dir" value="${user.dir}/src/test" />
	<property name="conf.dir" value="${user.dir}/etc" />

	<property file="${workdir}/ant.install.properties" />
	<property file="${basedir}/ant.install.properties" />
	<available file="${basedir}/ant.install.properties" type="file" property="antinstaller.mode" />

	<taskdef name="propertyfile" classname="org.apache.tools.ant.taskdefs.optional.PropertyFile">
		<classpath>
			<pathelement location="${ant.home}/lib/ant-nodeps.jar" />
		</classpath>
	</taskdef>

        <taskdef resource="net/sf/antcontrib/antlib.xml">
            <classpath><fileset dir="${workdir}/lib" includes="**/ant-contrib*.jar"/></classpath>
        </taskdef>

	<target name="init">
		<condition property="install.type.db" value="true">
			<equals arg1="${install.type}" arg2="db2ldap" casesensitive="false" trim="true" />
		</condition>
		<condition property="install.type.csv" value="true">
			<equals arg1="${install.type}" arg2="csv2ldap" casesensitive="false" trim="true" />
		</condition>
		<condition property="install.type.ldap" value="true">
			<equals arg1="${install.type}" arg2="ldap2ldap" casesensitive="false" trim="true" />
		</condition>
	</target>

	<target name="generate" depends="init,ldap2ldap,csv2ldap,db2ldap,replaceSpecialChars,_generate" />

	<target name="updateLdapProperties">
		<propertyregex property="src.java.naming.provider.url"
			override="true"
			input="${src.server.url}${src.naming.context}"
			defaultValue="${src.server.url}${src.naming.context}"
			global="true" 
			regexp=" "
			replace="\\\\20" />
		<propertyregex property="dst.java.naming.provider.url"
			override="true"
			input="${dst.server.url}${dst.naming.context}"
			defaultValue="${dst.server.url}${dst.naming.context}"
			global="true" 
			regexp=" "
			replace="\\\\20" />
		<propertyfile file="${conf.dir}/lsc.properties" comment="Re/set the Source LDAP properties">
			<entry key="src.java.naming.security.authentication" value="${src.auth.mode}"/>
			<entry key="src.java.naming.provider.url" value="${src.java.naming.provider.url}" />
			<entry key="src.java.naming.security.principal" value="${src.principal.dn}" />
			<entry key="src.java.naming.security.credentials" value="${src.principal.password}" />

			<entry key="dst.java.naming.security.authentication" value="${dst.auth.mode}"/>
			<entry key="dst.java.naming.provider.url" value="${dst.java.naming.provider.url}" />
			<entry key="dst.java.naming.security.principal" value="${dst.principal.dn}" />
			<entry key="dst.java.naming.security.credentials" value="${dst.principal.password}" />

			<entry key="dn.real_root" value="${dst.naming.context}" />
		</propertyfile>
	</target>

	<target name="updateDatabaseProperties" if="install.type.db">
		<propertyfile file="${conf.dir}/lsc.properties" comment="Reset the database properties">
			<entry key="src.database.driver" value="${jdbc.driver}" />
			<entry key="src.database.url" value="${jdbc.url}" />
			<entry key="src.database.username" value="${jdbc.username}" />
			<entry key="src.database.password" value="${jdbc.password}" />
		</propertyfile>
	</target>

	<target name="ldap2ldap" depends="updateLdapProperties" if="install.type.ldap">
		<property name="extraParams" value="-ldap2ldap -soc ${src.objectclass.name}" />
	</target>

	<target name="db2ldap" depends="updateLdapProperties,updateDatabaseProperties" if="install.type.db">
		<property name="extraParams" value="-db2ldap" />
	</target>

	<target name="csv2ldap" depends="updateLdapProperties,updateDatabaseProperties" if="install.type.csv">
		<property name="extraParams" value="-csv2ldap -csvsep '${csv.separator}' -csvf '${csv.filename}'" />
	</target>

	<target name="replaceSpecialChars">
		<replaceregexp file="${conf.dir}/lsc.properties" match="\\\:" replace=":" flags="g" byline="true" />
		<replaceregexp file="${conf.dir}/log4j.properties"  match="\\\:" replace=":" flags="g" byline="true"/>
		<replaceregexp file="${conf.dir}/lsc.properties" match="\\=" replace="=" flags="g" byline="true" />
	</target>

	<target name="_generate">
		<echo message="Launching generation from ${workdir} with following command line options : -f '${conf.dir}' -dir '${generated.dir}' -doc ${dst.objectclass.name} -name '${task.name}' ${extraParams}" />
		<ant antfile="build.xml" target="lsc::_generator" dir="${workdir}">
			<property name="generator.parameters" value="-f '${user.dir}/etc' -dir '${generated.dir}' -doc ${dst.objectclass.name} -name '${task.name}' ${extraParams}" />
		</ant>
	</target>
</project>
